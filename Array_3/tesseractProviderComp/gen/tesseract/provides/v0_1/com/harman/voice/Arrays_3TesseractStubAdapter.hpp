/**
 * generated by Voice CodeGen Version: Beta_R1_v0.1.0
 * generated on: Thu Sep 10 18:55:36 IST 2015
 */

#ifndef V0_1_COM_HARMAN_VOICE_ARRAYS_3TESSERACTSTUBADAPTER_HPP
#define V0_1_COM_HARMAN_VOICE_ARRAYS_3TESSERACTSTUBADAPTER_HPP

#include "v0_1/com/harman/voice/Arrays_3Stub.hpp"
#include "v0_1/com/harman/voice/Arrays_3_tesseract_serializers.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Tesseract/CTesseractFactory.h>
#include <CommonAPI/Tesseract/CTesseractStubAdapter.h>
#include <CommonAPI/Tesseract/CAsyncApiHandler.h>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v0_1 {
namespace com {
namespace harman {
namespace voice {

typedef CommonAPI::Tesseract::TesseractStubAdapterHelper<Arrays_3Stub> Arrays_3TesseractStubAdapterHelper;

class Arrays_3TesseractStubAdapterInternal
: public virtual Arrays_3StubAdapter
, public Arrays_3TesseractStubAdapterHelper
{

public:
	Arrays_3TesseractStubAdapterInternal(
		const CommonAPI::Address &_address,
		const std::shared_ptr<CommonAPI::StubBase> &_stub);

		virtual ~Arrays_3TesseractStubAdapterInternal() {};
	
	
		static CommonAPI::Tesseract::CAsyncApiHandler<
	Arrays_3Stub,
	    std::tuple<std::vector<::v0_1::com::harman::voice::Arrays_3::latlong>>,
	    std::tuple<std::vector<::v0_1::com::harman::voice::Arrays_3::latlong>>
	    > routeStubDispatcher;
		static CommonAPI::Tesseract::CAsyncApiHandler<
	Arrays_3Stub,
	    std::tuple<::v0_1::com::harman::voice::Arrays_3::latlong>,
	    std::tuple<std::vector<::v0_1::com::harman::voice::Arrays_3::latlong>>
	    > getShortestRouteStubDispatcher;
		static CommonAPI::Tesseract::CAsyncApiHandler<
	Arrays_3Stub,
	    std::tuple<::v0_1::com::harman::voice::Arrays_3::latlong>,
	    std::tuple<::v0_1::com::harman::voice::Arrays_3::POIS_NAME>
	    > getPOIStubDispatcher;
	
		void deactivateManagedInstances();
		virtual void init(std::shared_ptr<CTesseractStubAdapter> instance);
		virtual void deinit();

};

class Arrays_3TesseractStubAdapter : public Arrays_3TesseractStubAdapterInternal, public std::enable_shared_from_this<Arrays_3TesseractStubAdapterInternal> {
public:
	Arrays_3TesseractStubAdapter(
    	const CommonAPI::Address &_address,
        const std::shared_ptr<CommonAPI::StubBase> &_stub);

	virtual ~Arrays_3TesseractStubAdapter();
private:

};

} // namespace voice
} // namespace harman
} // namespace com
} // namespace v0_1

#endif // V0_1_COM_HARMAN_VOICE_ARRAYS_3TESSERACTSTUBADAPTER_HPP
