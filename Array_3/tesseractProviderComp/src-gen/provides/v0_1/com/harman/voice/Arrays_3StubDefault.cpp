/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.2.qualifier.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: Beta_R1_v0.1.0
* generated on: Thu Sep 10 18:55:35 IST 2015
*/
#include <v0_1/com/harman/voice/Arrays_3StubDefault.hpp>
#include <assert.h>

namespace v0_1 {
namespace com {
namespace harman {
namespace voice {

Arrays_3StubDefault::Arrays_3StubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(Arrays_3::getInterfaceVersion()) {
}

const CommonAPI::Version& Arrays_3StubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    return interfaceVersion_;
}

Arrays_3StubRemoteEvent* Arrays_3StubDefault::initStubAdapter(const std::shared_ptr<Arrays_3StubAdapter> &_adapter) {
    CommonAPI::Stub<Arrays_3StubAdapter, Arrays_3StubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}


void Arrays_3StubDefault::route(const std::shared_ptr<CommonAPI::ClientId> _client, std::vector<Arrays_3::latlong> _latLong, routeReply_t _reply) {
    std::vector<Arrays_3::latlong> path = {};
    _reply(path);
}

void Arrays_3StubDefault::getShortestRoute(const std::shared_ptr<CommonAPI::ClientId> _client, Arrays_3::latlong _latLongStructure, getShortestRouteReply_t _reply) {
    std::vector<Arrays_3::latlong> path = {};
    _reply(path);
}

void Arrays_3StubDefault::getPOI(const std::shared_ptr<CommonAPI::ClientId> _client, Arrays_3::latlong _latLongStruct, getPOIReply_t _reply) {
    Arrays_3::POIS_NAME poisName;
    _reply(poisName);
}




Arrays_3StubDefault::RemoteEventHandler::RemoteEventHandler(Arrays_3StubDefault *_defaultStub)
    : 
      defaultStub_(_defaultStub) {
}

} // namespace voice
} // namespace harman
} // namespace com
} // namespace v0_1
